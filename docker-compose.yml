version: "3"
services:
  strapi:
    container_name: strapi
    build: ./backend
    image: strapi:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./backend/config:/opt/app/config
      - ./backend/src:/opt/app/src # DB schema
      - ./backend/package.json:/opt/package.json
      - ./backend/yarn.lock:/opt/yarn.lock
      - ./.env:/opt/app/.env
      - ./backend/public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - strapi-network
    depends_on:
      - strapiDB

  strapiDB:
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/mysql
      #- ./backend/data:/var/lib/mysql # if you want to use a bind folder
    ports:
      - "3306:3306"
    networks:
      - strapi-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    env_file: .env
    environment:
      PMA_HOST: strapiDB
      PMA_PORT: 3306
      PMA_USER: ${DATABASE_USERNAME}
      PMA_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "80:80"
    depends_on:
      - strapiDB
    networks:
      - strapi-network

  react-frontend:
    container_name: react-frontend
    build: ./frontend
    volumes:
      - './frontend:/usr/src/app'
      # - './frontend:/frontend/usr/src/app/node_modules'
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=${NODE_ENV}
    networks:
      - strapi-network

volumes:
  strapi-data:

networks:
  strapi-network:
    driver: bridge